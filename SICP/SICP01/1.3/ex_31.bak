(define (cube x) (* x x x)) 
  
(define (inc n) (+ n 1)) 
        
(define (sum term a next b) 
    (if (> a b) 
        0 
        (+ (term a) 
            (sum term (next a) next b)))) 

(define (product term a next b)
    (if (> a b) 
        a 
        (* (term a) 
            (product term (next a) next b))))

(define (product-iter term a next b)
    (define (iter a result)
        (if (> a b)
            result
            (iter (next a) (* (term a) result))))
        (iter a 1))

            
(define (lept a) a)

(product lept 1 inc 3)
(product-iter lept 1 inc 3)